{"version":3,"sources":["components/Filter.js","components/Add.js","services/personsService.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","onChange","value","placeholder","Add","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","type","baseUrl","getAll","axios","get","then","response","data","create","newObject","post","deleteObj","id","a","window","confirm","name","delete","location","reload","Person","person","number","onClick","personsService","Persons","persons","search","filter","toUpperCase","includes","map","Notification","message","style","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchValue","setSearch","notification","setNotification","setStyle","useEffect","initialPersons","event","preventDefault","target","personObject","e","length","setTimeout","returnedPerson","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6b29bbc.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n\nreturn (\n    <div>\n        <input           \n          onChange={props.onChange} \n          value={props.value}\n          placeholder=\"Search by name\" />\n    </div>\n)}\n\nexport default Filter;","import React from 'react'\n\nconst Add = (props) => {\n    \n  return(\n    <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input \n                  value={props.valueName}\n                  onChange={props.onChangeName}/>\n        </div>     \n        <div>\n          number: <input\n                    value={props.valueNumber}\n                    onChange={props.onChangeNumber}/>\n          </div>   \n          <button type=\"submit\">add</button>\n      </form>\n  )\n}\n\nexport default Add;","// palauttaa olion, jonka kenttinä on \n// henkilöjen käsittelyä hoitavia funktioita\n\nimport axios from 'axios'\n\n//const baseUrl = 'http://localhost:3001/persons'\n// muutettu vastaamaan osan3 backendin urlia, jossa muistiinpanot/puhelinluettelo on\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteObj = async id => {\n    const personToDelete = await axios\n                      .get(`${baseUrl}/${id}`)\n                      .then(response => response.data) \n                      .then(data => window.confirm(`Delete ${data.name} ?`))                     \n                      \n    if (personToDelete === true) {\n      axios.delete(`${baseUrl}/${id}`)\n      window.location.reload()\n    }\n}\n\nexport default { getAll, create, deleteObj }","import React from 'react'\nimport personsService from '../services/personsService';\n\nconst Person = (props) => {\n\nconst person = props.person\n\nreturn (\n    <li>\n        {person.name} {person.number}\n        <button onClick={() => personsService.deleteObj(person.id)}>delete</button>  \n    </li>    \n    )\n}\n\nexport default Person;\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = (props) => {\n\nconst persons = props.persons\nconst search = props.search\n\nreturn (\n    <ul>\n        {persons\n        .filter(person => \n            (person.name).toUpperCase().includes(search.toUpperCase()) \n            || person.name==='') \n        .map(person => \n            <Person key={person.name} person={person}/>)\n        }\n    </ul>\n)\n}\n\nexport default Persons;","const Notification = ({ message, style }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={style}>\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification;","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport Add from './components/Add'\nimport Persons from './components/Persons'\nimport personsService from './services/personsService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  \n  const [ persons, setPersons] = useState([])  \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchValue, setSearch ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ style, setStyle ] = useState('')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addNewName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName, \n      number: newNumber\n    }\n\n    if(persons.filter(e => e.name===newName).length > 0){\n      setNotification(`Name ${newName} is already added to phonebook`);\n      setStyle('error')\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')}\n    else if(persons.filter(e => e.number===newNumber).length > 0){\n      setNotification(`Number ${newNumber} is already added to phonebook`);\n      setStyle('error')\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')}  \n    else if (newNumber === \"\" || newNumber === \"\") {\n      setNotification(`Missing info`);\n      setStyle('error')\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')} \n    else {  \n      personsService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`Added ${newName}`)\n          setStyle('success')\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    event.preventDefault()\n    setSearch(event.target.value)    \n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notification} style={style}/>\n\n      <Filter \n        onChange={handleSearchChange} \n        value={searchValue} />\n\n      <h2>Add a new</h2>\n      <Add \n        onSubmit={addNewName}\n        valueName={newName}\n        onChangeName={handleNameChange}\n        valueNumber={newNumber}\n        onChangeNumber={handleNumberChange}\n        />\n\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons} \n        search={searchValue}        \n      />   \n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}